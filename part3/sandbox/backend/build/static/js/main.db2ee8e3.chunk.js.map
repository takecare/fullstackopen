{"version":3,"sources":["services/notes.js","components/Notification.js","components/Note.js","App.js","index.js"],"names":["baseUrl","process","id","original","axios","get","Promise","resolve","reject","then","response","data","catch","note","post","put","delete","Notification","message","className","Note","toggleImportance","remove","label","important","content","onClick","App","props","useState","notes","setNotes","input","setInput","errorMessage","setErrorMessage","useEffect","noteService","error","console","handleImportanceToggle","newNote","map","item","handleRemove","filter","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sOACMA,EAAO,UAAMC,6CAAN,cAqBE,EAnBF,SAACC,GACZ,IAAMC,EAAWC,IAAMC,IAAN,UAAaL,EAAb,YAAwBE,GAAU,KACnD,OAAO,IAAII,SAAQ,SAACC,EAASC,GAAV,OACjBL,EAASM,MAAK,SAACC,GAAD,OAAcH,EAAQG,EAASC,SAAOC,MAAMJ,OAgB/C,EAZA,SAACK,GACd,OAAOT,IAAMU,KAAKd,EAASa,GAAMJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAWhD,EARA,SAACE,GACd,OAAOT,IAAMW,IAAN,UAAaf,EAAb,YAAwBa,EAAKX,IAAMW,IAO7B,EAJA,SAACX,GACd,OAAOE,IAAMY,OAAN,UAAgBhB,EAAhB,YAA2BE,KCbrBe,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAOA,EAAU,yBAAKC,UAAU,SAASD,GAAiB,MCc7CE,EAfF,SAAC,GAAwC,IAAtCP,EAAqC,EAArCA,KAAMQ,EAA+B,EAA/BA,iBAAkBC,EAAa,EAAbA,OAChCC,EAAQV,EAAKW,UAAY,gBAAkB,YAC3CC,EAAUZ,EAAKW,UAAY,2BAAIX,EAAKY,SAAeZ,EAAKY,QAE9D,OACE,wBAAIN,UAAU,QACZ,6BAAMM,GACN,yBAAKN,UAAU,WACb,4BAAQO,QAAS,kBAAML,EAAiBR,KAAQU,GAChD,4BAAQG,QAAS,kBAAMJ,EAAOT,KAA9B,aC0EOc,EAhFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEKF,mBAAS,IAFd,mBAEdG,EAFc,KAEPC,EAFO,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,KAWrBC,qBANa,WACXC,IAEG5B,MAAK,SAACqB,GAAD,OAAWC,EAASD,MACzBlB,OAAM,SAAC0B,GAAD,OAAWC,QAAQD,MAAMA,QAEpB,IAEhB,IAqBME,EAAyB,SAAC3B,GAC9B,IAAM4B,EAAO,2BACR5B,GADQ,IAEXW,WAAYX,EAAKW,YAEnBa,EACUxB,GACPJ,MAAK,WACJsB,EACED,EAAMY,KAAI,SAACC,GAAD,OAAWA,EAAKzC,KAAOuC,EAAQvC,GAAKuC,EAAUE,SAG3D/B,OAAM,SAAC0B,GAAD,OAAWC,QAAQD,MAAMA,OAG9BM,EAAe,SAAC/B,GACpBwB,EACUxB,EAAKX,IACZO,MAAK,WACJsB,EAASD,EAAMe,QAAO,SAACF,GAAD,OAAUA,EAAKzC,KAAOW,EAAKX,UAElDU,OAAM,SAAC0B,GAAD,OAAWC,QAAQD,MAAMA,OAGpC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcpB,QAASgB,IACvB,wBAAIf,UAAU,SACXW,EAAMY,KAAI,SAAC7B,GAAD,OACT,kBAAC,EAAD,CACEiC,IAAKjC,EAAKX,GACVW,KAAMA,EACNQ,iBAAkBmB,EAClBlB,OAAQsB,QAId,0BAAMG,SA3DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzB,QAASO,EACTmB,MAAM,IAAIC,MAAOC,cACjB7B,UAAW8B,KAAKC,SAAW,IAG7BlB,EACUa,GACPzC,MAAK,SAACI,GACLkB,EAASD,EAAM0B,OAAO3C,IACtBoB,EAAS,OAEVrB,OAAM,SAAC0B,GAAD,OAAWH,EAAgB,4BA8ChC,2BAAOsB,MAAOzB,EAAO0B,SA3CF,SAACV,GACxBf,EAASe,EAAMW,OAAOF,UA2ClB,4BAAQG,KAAK,UAAb,W,MC1ERC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db2ee8e3.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = `${process.env.REACT_APP_API_BASE_URL}/api/notes`;\n\nconst read = (id) => {\n  const original = axios.get(`${baseUrl}/${id ? id : \"\"}`);\n  return new Promise((resolve, reject) =>\n    original.then((response) => resolve(response.data)).catch(reject)\n  );\n};\n\nconst create = (note) => {\n  return axios.post(baseUrl, note).then((response) => response.data);\n};\n\nconst update = (note) => {\n  return axios.put(`${baseUrl}/${note.id}`, note);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  read,\n  create,\n  update,\n  remove,\n};\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  return message ? <div className=\"error\">{message}</div> : null;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance, remove }) => {\n  const label = note.important ? \"not important\" : \"important\";\n  const content = note.important ? <b>{note.content}</b> : note.content;\n\n  return (\n    <li className=\"note\">\n      <div>{content}</div>\n      <div className=\"actions\">\n        <button onClick={() => toggleImportance(note)}>{label}</button>\n        <button onClick={() => remove(note)}>delete</button>\n      </div>\n    </li>\n  );\n};\n\nexport default Note;\n","import React, { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Note from \"./components/Note\";\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const hook = () => {\n    noteService\n      .read()\n      .then((notes) => setNotes(notes))\n      .catch((error) => console.error(error));\n  };\n  useEffect(hook, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: input,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService\n      .create(noteObject)\n      .then((note) => {\n        setNotes(notes.concat(note));\n        setInput(\"\");\n      })\n      .catch((error) => setErrorMessage(\"Failed do add note.\"));\n  };\n\n  const handleNoteChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleImportanceToggle = (note) => {\n    const newNote = {\n      ...note,\n      important: !note.important,\n    };\n    noteService\n      .update(note)\n      .then(() => {\n        setNotes(\n          notes.map((item) => (item.id === newNote.id ? newNote : item))\n        );\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const handleRemove = (note) => {\n    noteService\n      .remove(note.id)\n      .then(() => {\n        setNotes(notes.filter((item) => item.id !== note.id));\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <ul className=\"notes\">\n        {notes.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={handleImportanceToggle}\n            remove={handleRemove}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={input} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}